<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown | 伯遠君の部屋]]></title>
  <link href="http://scorpiohw.github.com/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://scorpiohw.github.com/"/>
  <updated>2013-04-23T11:58:12+08:00</updated>
  <id>http://scorpiohw.github.com/</id>
  <author>
    <name><![CDATA[ScorpioHW]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[如何在nvALT中加入图片]]></title>
    <link href="http://scorpiohw.github.com/blog/2013/01/29/ru-he-zai-nvaltzhong-jia-ru-tu-pian/"/>
    <updated>2013-01-29T15:17:00+08:00</updated>
    <id>http://scorpiohw.github.com/blog/2013/01/29/ru-he-zai-nvaltzhong-jia-ru-tu-pian</id>
    <content type="html"><![CDATA[<h2>方法一</h2>

<p><img src="/pictures/插入图片测试.png" title="测试图片1" ></p>

<p><code>![插入图片测试](./pictures/插入图片测试.png)</code></p>

<p>如上所示，我在<code>nvALT</code>数据库中建立了一个专门用于存放<code>_Picture</code>的文件，之后把所有的图片放在这里，通过<code>Markdown</code>语言的特性进行调用。</p>

<p>因为<code>nvALT</code>支持第三方编辑器的修改。所以可以很容易的启动<code>Mou</code>这个软件。这样就可以完美解决<code>nvALT</code>只能存文本的情况了。真的是太好用了。。。以后就可以保存图片了！XD</p>

<h2>方法二</h2>

<p>方法一中的方式使通过相对地址。这样的好处是只要文件结构相同不需要修改代码。方法二中采用的是直接地址，好处是可以添加文件，添加视频等等任何东西都可以只要绝对地址不改变。不过对于文件结构稳定性要求较高。不适合长期使用。还是相对地址比较合适。当然如果是有效期比较短的文件没有什么问题，使用完直接<code>export</code>就好了。如果有效期比较长的文件就需要考虑引用方式了。</p>

<p><img src="/pictures/mouth.png" title="测试图片2" ></p>

<p><code>![](file:///Users/Mike/Dropbox/Apps/nvALT%20Data/pictures/mouth.png)</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为Markdown添加数学公式]]></title>
    <link href="http://scorpiohw.github.com/blog/2013/01/29/wei-markdowntian-jia-shu-xue-gong-shi/"/>
    <updated>2013-01-29T14:49:00+08:00</updated>
    <id>http://scorpiohw.github.com/blog/2013/01/29/wei-markdowntian-jia-shu-xue-gong-shi</id>
    <content type="html"><![CDATA[<p>如何在<code>Markdown</code>语言中加入数学公式。这个问题是我这两天一直在考虑的。通过<code>Google</code>搜索，以及自己分析研究。我确定了以下四个解决方案。他们都可以完美支持中文和数学公式。其中第四个方案，我个人认为是最方便的。</p>

<p>下面说说我的初衷吧。我是一个狂热的<code>Markdown</code>拥趸。同时也是<code>nvALT</code>的重度使用者。我希望我所有的文章都可以存储在<code>nvALT</code>里面。前一阵子刚刚解决了<code>nvALT</code>加入图片的问题。现在突发奇想是不是也应该实现数学公式的问题？虽然目前没有需求，但是可以为过一段开始的研究生生活做一些技术储备嘛！呵呵。</p>

<p><strong>NOTE!</strong> 看起来博客现实数学公式的功能还没实现…T T</p>

<h2>方案1 没问题=)</h2>

<p>第一个方案是通过<code>pandoc</code>这款程序来实现的。通过对于md的超集来解决。</p>

<p>只需要在<code>markdown</code>文件中加入tex公式即可。
<code>$\sum_i=a_i$</code> 就可以编译出来。在终端中使用如下代码。</p>

<pre><code>pandoc thisfile.md -o anyName.pdf
</code></pre>

<p>就出来结果了。</p>

<p>但是因为<code>latex</code>的一些原因，不支持中文 T T</p>

<p><del>需要先编译成tex文件，然后进行一些修改，才能编译中文。（中文还没有办法）</del></p>

<pre><code>pandoc -s thisfile.md -o anyName.tex
修改一些参数
xelatex anyName.tex -o anyName.pdf
</code></pre>

<p><del>就可以了。</del></p>

<p>因为本人<code>latex</code>造诣有限，目前还没有找到解决方案。。。T T</p>

<p><strong>Pandoc最好的选择是转换成HTML格式。可以完美支持中文，同时可以很好的显示数学代码。不过从使用的角度来说还是Marked的效果最好。</strong></p>

<h2>方案2 支持中文</h2>

<pre><code>&lt;script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"&gt;&lt;/script&gt;
</code></pre>

<p>看到没在上面添加这个脚本链接就可以了。这回支持中文了。：）</p>

<pre><code>(E=mc^2)，$$x_{1,2} = \frac{-b \pm \sqrt{b^2-4ac}}{2b}.$$
</code></pre>

<p>不过需要网络哦！</p>

<p>注意的一点事，这个公式的<code>$</code>个数和<code>latex</code>标准不太一样哦！是两个啦！不支持行内公式。</p>

<h2>方案3 支持中文</h2>

<p>就是直接在这里写，但是可以通过<code>Marked</code>进行查看。因为Marked支持<code>MathJax</code>的渲染。<del>不过好像需要联网才行。</del></p>

<p><code>nvALT</code>是可以使用外部编辑器的。所以通过<code>Marked</code>这款专门用来看<code>Markdown</code>语言的工具来进行实时浏览很方便。</p>

<h2>方案4 最佳方案</h2>

<p><code>Mou</code>竟然支持数学表达式！！！XD 只需要在两个<code>$$敲击代码$$</code>之间敲击代码即可。支持<code>Latex</code>的代码方式哦！！太好用了啦！！</p>

<pre><code>$$\sum_{i\to 2}^i$$
</code></pre>

<p>是不是很酷呀！！</p>
]]></content>
  </entry>
  
</feed>
